1. 服务治理:
	微服务架构中最为核心和基础的模块，主要用来实现各个微服务实例的自动化注册和发现。

2.服务注册:
	在服务治理框架中,通常都会构建一个注册中心，每个服务单元向注册中心登记自己提供的服务，将主机与端口号，版本号，通信协议等一些附加信息告知注册中心 ，注册中心按服务名分类组织服务清单。	比如，我们有两个提供服务A的进程分别运行于192.168.0.100:8000和192.168.0.101:8000位置上，另外还有三个提供服务B的进程:192.168.0.100:9000、192.168.0.101:9000、192.168.0.102:9000。当这些进程均启动，并向注册中心注册自己的服务之后哦，注册中心就会维护类似下面的服务清单。另外，服务注册中心还需哟以心跳的方式去监测清单中服务是否可用欧冠，若不可用需要从服务清单中剔除，达到排除故障服务的效果
	| 服务名 | 位置                                                      |
	| 服务A  |192.168.0.100:8000、192.168.0.101:8000                     |
	| 服务B  | 192.168.0.100:9000、192.168.0.101:9000、192.168.0.102:9000|
	
3. 服务发现:
	在服务治理框架的运作下，服务间的调用不再通过指定具体的实例地址来实现，而是通过向服务名发起请求调用实现。所以，服务调用方在调用服务提供方接口的时候，并不知道具体的服务实例位置。因此需要向服务注册中心咨询服务，并获取所有服务的实例清单，以实现对具体服务实例的访问。
	
4. 	