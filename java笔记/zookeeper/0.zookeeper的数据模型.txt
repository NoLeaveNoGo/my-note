1.zookeeper的数据模型Znode:和标准的文件系统非常相似
    / :根节点
        /Baidu 
            /Baidu/Yun
        /Huawei
            /Huawei/Yun
    (1)采用树形层次结构，树中每一个节点被称为Znode
    (2)每个节点可以拥有子节点
  和文件系统的不同点:
    (1)引用方式:
        1.Znode通过路径来引用，但是路径必须是绝对的，因此必须由"/"开头。
        2. 路径必须唯一，"/zookeeper"被用来保存管理信息
        
    (2)Znode的结构：兼顾文件和目录俩种特点
        1. 可以像文件一样维护数据、元信息、acl、时间戳等数据
        2. 可以像目录一样作为路径标识的一部分
            * 每个Znode包含三部分:
                * stat :此为状态信息，描述该Znode的版本，权限等信息
                * data :与该Znode关联的数据
                * children : 该Znode下的子节点
                
    (3)数据访问 :
        (1)每个节点存储的数据要被原子性操作。
            也就是说读草走哦将获取与节点相关的所有数据，写操作也将替换掉节点的所有数据
        (2)每个节点都拥有自己的ACL(访问控制列表)，这个列表规定了用户的权限，即限定了特定用户对目标节点可以执行的操作。
    
    (4)节点类型: 
        分为临时节点和永久节点，节点的类型在创建是确定，并且不能改变
            * 临时节点:
                (1)该节点的生命周期依赖于创建 它们的会话，一旦会话结束，临时节点将被自动删除
                (2)临时节点 不允许拥有子节点
            * 永久节点 ：
                (1)该节点的生命周期不依赖于会话，
                (2)并且只有在客户端显示执行删除的时候，他们才能被删除 
    
    (5)顺序节点
        当创建Znode的时候，用户可以请求在Zookeeper的路径结尾添加一个递增的计数，
        这个计数对于此节点的父节点来说是0，当计数值大于2^32-1时，计数器将溢出
    
    (6)观察
        (1)客户端可以在节点上设置watch，称为监视器。
        (2)当节点状态发生改变时(Znode的增，删改)，将触发watch所对应的 操作，当watch被触发，Zookeeper将会向客户端发送且仅发送一条通知，因为watch只能被触发一次，这样可以减少网络流量
        
        
            
        
        
        
    
        
