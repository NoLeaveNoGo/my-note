tcpdump命令的格式为:
    tcpdump [ -DenNqvX] [-c count] [-F file] 
         [-i interface] [-r file] [-s snaplen]
         [-w file] expression
 ------------------------------------------------------------------------------        
   一: 抓包选项:
        -c ：指定要抓取的包的数量。
            (1)是最终要获取这么多包.例如"-c 10"将获取10个包，但可能处理了100个包，只要10个符合条件
        -i interface:指定要监听的接口。
            (1)可以用'any'关键字表示所有的网络接口
        -n :对地址以数字方式显示。否则显示主机名
            (1)也就是-n不做域名解析
        -nn :除了-n作用外，还显示端口的数值，否则显示端口服务名
            (1)例如22端口，如果不-nn,那么显示的就是(ssh)
        -N  :   不打印host的域名部分
        -P  :指定要抓取的包是流入包还是流出包。默认"inout"
        -s len:设置tcpdump数据包抓取的长度len。默认65535字节
    输出选项:
        -e:包含链路信息(如源mac、目标mac)
            是在每个数据包前显示(包信息概览)
        -q:快速打印输出
        -X: 输出包去除了"数据链路层头部数据",主要是没有了(目标mac地址、源mac地址和下一层使用的协议)
        -XX:输出包的头部数据，会以16进制和ASCII两种方式同时输出(包含物理层的数据头)
        -v :当分析和打印的时候，产生详细的输出??
        -vv: 输出更详细
        -vvv: 更更详细。。。
    其他选项:
        -w: 将抓包数据输出到文件而不是标准输出
           * 这些文件可以导入wireshark进行查看
  ----------------------------------------------------------------
  二 .tcpdump表达式 :
  1.作用:
      (1)表达式用于筛选哪些类型的数据包
      (2)如果没有设置，那么所有的数据包都会输出
  2.组成:
      (1)表达式由 一个或者多个"单元"组成
      (2)每个单元一般包含ID的修饰符和一个ID("数字或者名称")组成
          修饰符:有三种
            (1)type:指定ID的类型
                可以给定的值有host、net、port、portrange
                example:
                    "host foo"、"net 128.3"、"port 20"、"portrange 6000-6008"
            (2)dir:指定ID的方向
                包括src/dst/src or dst/src and dst 。默认"src or dst"
                example:
                    "src foo":表示源主机为foo的数据包
                    "dst net 128.3" :表示目标网络为128.3的数据包
                    "src or dst port 22":表示源或目的端口为22的数据包
            (3)proto: 通过给定协议限定匹配数据包类型
                常见的协议有:tcp/udp/arp/ip/ether/icmp等
                example:
                    "tcp port 21"
                    "udp portrange 6000-6008"
    * 所以，一个基本的表达式单元格为"proto dir type ID"
    * 表达式单元之间可以使用操作符" and / && / or / || / not / ! "进行连接，从而组成复杂的条件表达式。
  
        
        
        
            