Class文件是一组以8位字节为基础单位的二进制流，各个数据项目严格按照数据紧凑的排列在Class文件中

1. 每个Class文件的头四个字节成为魔数(magic Number)。
	* 它的唯一作用就是确定这个文件是否为一个能被虚拟机接受的Class文件
	* 魔数的值固定为0xCAFEBABE 
	
2. 第5和第6个字节是次版本号，第7和第八是主版本号	


# 2.类加载的时机
	类从被加载到虚拟机内存中开始，到卸载出内存为止。
	生命周期包括:加载(Loading)、验证(Verification)、准备(Preparation)、解析(Resolution)、初始化(Initiazation)、使用(Using)和卸载(unloading)
		Java虚拟机规范有且只有5中情况必须立即对类进行"初始化"(而加载、验证、准备自然需在此之前)
			* 遇到new、getstatic、putstatic或invokestatic这4条字节码指令
			* 使用java.lang.reflect包下的方法对类进行反射调用时
			* 初始化一个类，其父类还没进行初始化，必须先触发其父类的初始化
			* 虚拟机启动时，用户指定一个要执行的主类(包括main()方法的那个类)，虚拟机会先初始化这个主类
			* jdk1.7动态语言支持时。。。。
			