1.Java对象的大小问题：
    基本数据类型:
   | 基本类型  |  大小(字节) |
   |   byte    |     1       |
   |  short    |     2       |
   |   int     |     4       |
   |   long    |     8       |
   |   float   |     4       |
   |   double  |     8       |
   |   char    |     2       |
   |  boolean  |  较特殊:1   | 看java虚拟机的规范，1个字节、4个字节都有可能
   
   非基本类型:
    (1)一个空Object对象的大小是8byte,这个大小只是保存在堆中的大小,栈中的大小都是4个字节(类似指针)
    (2) Java在对象内存分配时都是以8的整数倍里分配
    example:
            ` class NewObject{
                    int count;
                    boolean flag;
                    Object ob;
              } `
            其大小为:
                (1)空对象(8byte)+int(4byte)+boolean(1)+Object(4,只算它的引用大小)=17 byte
                (2)因此大于17byte的最接近8的整数倍的是24，因此此对象的大小为24byte。
    
2.引用类型：
    分为强引用、软引用、弱引用和虚引用
    强引用: 被强引用的对象，不会被垃圾回收
    软引用: 用作缓存。垃圾回收时会根据剩余内存来决定是否对软引用进行回收，发生OutOfMemeory时，肯定没有软引用
    弱引用：也是缓存，但在垃圾回收时一定会被回收。
    
    
        